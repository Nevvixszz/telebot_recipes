import telebot
from telebot import types
bot = telebot.TeleBot("8367813428:AAHFnC_nl_kyToj51RC-E_N3TKPQU6Yc88U")
user_choice = {}
from salats import salat

def keybord():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn3 = types.KeyboardButton('üîç –ü–æ–∏—Å–∫ –ø–æ ID')
    keyboard.add(btn3)
    return keyboard
@bot.message_handler(commands=['start', 'help'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!\n\n–Ø - —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –µ–¥–µ!\n\n–•–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –≥–æ—Ç–æ–≤–∏—Ç—å? –ù–∞–∂–∏–º–∞–π –Ω–∞ /food –∏–ª–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–Ω–∏–∑—É.", reply_markup=keybord())
@bot.message_handler(func=lambda message: message.text == 'üîç –ü–æ–∏—Å–∫ –ø–æ ID')
def search_button(message):
    send(message)
@bot.message_handler(commands=['food'])
def send(message):
    markup = types.InlineKeyboardMarkup()
    but1 = types.InlineKeyboardButton("–í—ã–ø–µ—á–∫–∞", callback_data="–í—ã–ø–µ—á–∫–∞")
    but2 = types.InlineKeyboardButton("–°–∞–ª–∞—Ç—ã", callback_data="–°–∞–ª–∞—Ç—ã")
    but3 = types.InlineKeyboardButton("–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞", callback_data="–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞")
    markup.add(but1, but2)
    markup.add(but3)
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=markup)
@bot.callback_query_handler(func=lambda call: True)
def ide(call):
    category = call.data
    user_choice[call.from_user.id] = category
    avaible_foods = []
    for id, food in salat.items():
        if food['category'] == category:
            avaible_foods.append(f"{id}. {food['name']}")
    foods_text = "\n".join(avaible_foods)
    bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ ID {category}:\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ë–ª—é–¥–∞: {foods_text}", reply_markup=keybord())
@bot.message_handler(content_types=['text'])
def send_salat(message):
    user_id = message.from_user.id
    if user_id not in user_choice:
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–µ—Ä–µ–∑ /food", reply_markup=keybord())
        return
    try:
        food_id = int(message.text)
        category = user_choice[user_id]
        if food_id in salat and salat[food_id]['category'] == category:
            food_data = salat[food_id]
            response = f"{food_data['name'].upper()}\n\n"
            response += f"{food_data['url']}\n\n"
            response += f"{food_data['recipe']}"
            bot.send_message(message.chat.id, response, reply_markup=keybord())
        else:
            bot.send_message(message.chat.id, f"–ë–ª—é–¥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}", reply_markup=keybord())
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ—Ç —Ç–∞–∫–æ–≥–æ ID!")
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")

bot.polling()